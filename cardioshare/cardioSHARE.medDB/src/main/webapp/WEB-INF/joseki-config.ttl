# This file is written in N3 / Turtle

@prefix rdfs:   <http://www.w3.org/2000/01/rdf-schema#> .
@prefix rdf:    <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix xsd:    <http://www.w3.org/2001/XMLSchema#> .

@prefix module: <http://joseki.org/2003/06/module#> .
@prefix joseki: <http://joseki.org/2005/06/configuration#> .
@prefix ja:     <http://jena.hpl.hp.com/2005/11/Assembler#> .

## Note: web.xml must be in-step with this file.
## for each service, 

## Note: adding rdfs:label to blank nodes will cause Joseki 
## to print that in log messages.


## --------------------------------------------------------------
## About this configuration

<> rdfs:label "CardioSHARE Joseki Configuration File" .

## --------------------------------------------------------------
## About this server

<http://biordf.net/cardioSHARE/>  rdf:type joseki:Server ;
#    # Example of some initialization code.
#    joseki:initialization
#        [ module:implementation 
#            [ module:className <java:org.joseki.util.ServiceInitSimple> ;
#              rdfs:label "Example initializer" ; ]
#        ] ;
    .

## --------------------------------------------------------------
## Services

## Services are the points that request are sent to.
## serviceRef that will be used to match requests to services,
## not some resource URI for the description.

## Note that the service reference and the routing of incoming
## requests by URI as defined by web.xml have to align.

# Service 1
# General purpose SPARQL processor, no dataset, expects the
# request to specify the dataset (either by parameters in the
# protocol request or in the query itself).

<http://biordf.net/cardioSHARE/sparql/medDB>
    rdf:type            joseki:Service ;
    rdfs:label          "service point" ;
    joseki:serviceRef   "sparql/medDB" ;  # web.xml must route this name to Joseki
    joseki:dataset      _:medDB ;
    joseki:processor    joseki:ProcessorSPARQL ;
    .

# A dataset of one model as the default graph

_:medDB rdf:type ja:RDFDataset ;
    rdfs:label      "Personal MedDB" ;
    ja:defaultGraph
       [ a ja:MemoryModel ;
         rdfs:label "medDB.n3" ;
         ja:content [ ja:externalContent <${deploy.root}/data/medDB-with-interactions.n3> ]
       ] ;
    .

## --------------------------------------------------------------
## Processors

joseki:ProcessorSPARQL
    rdfs:label "General SPARQL processor" ;
    rdf:type joseki:Processor ;
    module:implementation joseki:ImplSPARQL ;

    # Parameters - this processor processes FROM/FROM NAMED
    joseki:allowExplicitDataset       "true"^^xsd:boolean ;
    joseki:allowWebLoading            "true"^^xsd:boolean ;
    ## And has no locking policy (it loads data each time).
    ## The default is mutex (one request at a time)
    joseki:lockingPolicy                joseki:lockingPolicyNone ;
    .

joseki:ImplSPARQL
    rdf:type   joseki:ServiceImpl ;
    module:className
        <java:org.joseki.processors.SPARQL> .

