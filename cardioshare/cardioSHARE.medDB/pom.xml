<?xml version="1.0" encoding="UTF-8"?>
<project
 xmlns="http://maven.apache.org/POM/4.0.0"
 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>ca.wilkinsonlab.sadi</groupId>
		<artifactId>sadi-webapp</artifactId>
		<version>0.1.1-SNAPSHOT</version>
	</parent>

    <groupId>org.sadiframework</groupId>
    <artifactId>cardioSHARE-medDB</artifactId>
    <version>0.0.2-SNAPSHOT</version>
    <packaging>war</packaging>

    <name>cardioSHARE-medDB</name>
    <description>cardioSHARE-medDB war</description>

    <properties>
        <maven-bundle-plugin.version>2.3.4</maven-bundle-plugin.version>
        <servlet-api.version>2.5</servlet-api.version>
        <!--
         we'd like to define this here, but we're prevented by
         http://maven.40175.n5.nabble.com/Property-overwriting-resource-filtering-for-sub-project-td72374.html
         (maven-resources-plugin gives precedence to properties defined in pom.xml over
          those defined on the command line)
         see profiles below for a workaround... 
        <deploy.root>http://localhost:8080</deploy.root>
         -->
        <deploy.js>${deploy.root}/js</deploy.js>
    </properties>
    <profiles>
    	<!--
    	 we'd rather define this in properties, see above for why we're not...
    	 -->
    	<profile>
    		<id>default-deploy-profile</id>
    		<activation>
    			<property>
    				<!-- this profile is active when deploy.root is NOT set -->
    				<name>!deploy.root</name>
    			</property>
    		</activation>
    		<properties>
    			<!-- put the default value here -->
    			<deploy.root>http://localhost:8080</deploy.root>
    		</properties>
    	</profile>
    </profiles>

    <dependencies>
        <dependency>
        	<groupId>ca.wilkinsonlab.sadi</groupId>
        	<artifactId>sadi-service</artifactId>
        	<version>0.3.0-SNAPSHOT</version>
        </dependency>
	    <dependency>
	      <groupId>org.joseki</groupId>
	      <artifactId>joseki</artifactId>
	      <version>3.4.4</version>
	    </dependency>
        <dependency>
        	<groupId>ca.wilkinsonlab.cardioshare</groupId>
        	<artifactId>cardioSHARE-webapp</artifactId>
        	<version>1.0-SNAPSHOT</version>
        	<classifier>classes</classifier>
        </dependency>
        <!-- 
        <dependency>
        	<groupId>ca.wilkinsonlab.cardioshare</groupId>
        	<artifactId>cardioSHARE-webapp</artifactId>
        	<version>1.0-SNAPSHOT</version>
        	<type>war</type>
        </dependency>
         -->
        <dependency>
        	<groupId>ca.wilkinsonlab.sadi</groupId>
        	<artifactId>sadi-proxy</artifactId>
        	<version>0.0.1-SNAPSHOT</version>
        	<classifier>classes</classifier>
        </dependency>
        <dependency>
        	<groupId>org.semanticscience.SADI</groupId>
        	<artifactId>DDIdiscovery</artifactId>
        	<version>0.0.3-SNAPSHOT</version>
        	<type>war</type>
    		<exclusions>
		      	<exclusion>
		      	  <groupId>ca.wilkinsonlab.sadi</groupId>
		      	  <artifactId>sadi-service</artifactId>
		      	</exclusion>
	      	</exclusions>
        </dependency>
        <dependency>
        	<groupId>ca.unbsj.cbakerlab</groupId>
        	<artifactId>ie-sadi</artifactId>
        	<version>0.0.1</version>
        	<type>war</type>
    		<exclusions>
		      	<exclusion>
		      	  <groupId>ca.wilkinsonlab.sadi</groupId>
		      	  <artifactId>sadi-service</artifactId>
		      	</exclusion>
	      	</exclusions>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>servlet-api</artifactId>
            <version>${servlet-api.version}</version>
            <scope>provided</scope>
        </dependency>
    </dependencies>

	<build>
		<finalName>cardioSHARE-medDB</finalName>
		<resources>
			<resource>
        		<directory>src/main/resources</directory>
        		<filtering>true</filtering>
        	</resource>
		</resources>
		<plugins>
			<plugin>
				<groupId>org.apache.felix</groupId>
				<artifactId>maven-bundle-plugin</artifactId>
				<version>${maven-bundle-plugin.version}</version>
				<executions>
					<execution>
						<id>bundle-manifest</id>
						<phase>process-sources</phase>
						<goals>
							<goal>manifest</goal>
						</goals>
						<configuration>
							<instructions>
								<Bundle-SymbolicName>${project.artifactId}</Bundle-SymbolicName>
								<Bundle-Version>${project.version}</Bundle-Version>
								<Import-Package>
									*
                                </Import-Package>
							</instructions>
						</configuration>
					</execution>
				</executions>
				<configuration>
					<supportedProjectTypes>
						<supportedProjectType>jar</supportedProjectType>
						<supportedProjectType>bundle</supportedProjectType>
						<supportedProjectType>war</supportedProjectType>
					</supportedProjectTypes>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>${maven-war-plugin.version}</version>
				<configuration>
					<archive>
						<manifestFile>${project.build.outputDirectory}/META-INF/MANIFEST.MF</manifestFile>
					</archive>
					<escapeString>\</escapeString>
					<webResources>
						<!--
						<resource>
							<directory>src/main/js</directory>
							<filtering>true</filtering>
							<targetPath>js</targetPath>
						</resource>
						 -->
						<resource>
							<directory>src/main/webapp</directory>
							<filtering>true</filtering>
							<includes>
								<include>index.html</include>
								<include>uitest.html</include>
								<include>js/**</include>
								<include>WEB-INF/joseki-config.ttl</include>
							</includes>
						</resource>
						<resource>
							<directory>src/main/webapp</directory>
							<filtering>false</filtering>
							<excludes>
								<exclude>index.html</exclude>
								<exclude>uitest.html</exclude>
								<exclude>js/**</exclude>
								<exclude>WEB-INF/joseki-config.ttl</exclude>
							</excludes>
						</resource>
					</webResources>
					<overlays>
						<overlay>
				        	<groupId>org.semanticscience.SADI</groupId>
				        	<artifactId>DDIdiscovery</artifactId>
				        	<excludes>
				        		<exclude>WEB-INF/lib/sadi*.jar</exclude>
				        	</excludes>
						</overlay>
						<overlay>
				        	<groupId>ca.unbsj.cbakerlab</groupId>
				        	<artifactId>ie-sadi</artifactId>
				        	<excludes>
				        		<exclude>WEB-INF/lib/sadi*.jar</exclude>
				        	</excludes>
						</overlay>
					</overlays>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.mortbay.jetty</groupId>
				<artifactId>maven-jetty-plugin</artifactId>
				<configuration>
					<contextPath>/</contextPath>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.simplericity.jettyconsole</groupId>
				<artifactId>jetty-console-maven-plugin</artifactId>
				<version>1.45</version>
				<executions>
					<execution>
						<id>standalone-war</id>
						<phase>package</phase>
						<goals>
							<goal>createconsole</goal>
						</goals>
						<configuration>
							<name>CBRASS Personal Health Lens</name>
							<destinationFile>${project.build.directory}/personal-health-lens.jar</destinationFile>
							<backgroundImage>${basedir}/src/main/resources/medDB-console.jpg</backgroundImage>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<repositories>
		<repository>
			<id>dev.biordf.net</id>
			<name>dev.biordf.net</name>
			<url>http://dev.biordf.net/maven</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
		<repository>
			<!-- for Joseki -->
			<id>openjena.org</id>
			<url>http://openjena.org/repo</url>
		</repository>
	</repositories>
</project>
